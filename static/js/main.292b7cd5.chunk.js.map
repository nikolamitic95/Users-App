{"version":3,"sources":["components/Header/Header.jsx","components/Input/Input.jsx","shared/utilities.js","pages/LoginPage/LoginPage.jsx","components/User/User.jsx","shared/baseAPI.js","entities/userObj.js","entities/postObj.js","entities/albumObj.js","services/userService.js","components/Spinner/Spinner.jsx","hoc/authentication.js","pages/UsersPage/UsersPage.jsx","components/Card/Card.jsx","pages/SingleUserPage/SingleUserPage.jsx","components/Form/FormEl.jsx","pages/CreateNewUser/CreateNewUser.jsx","pages/EditUser/EditUser.jsx","App.js","index.js"],"names":["Header","useColorMode","colorMode","toggleColorMode","bg","p","d","justifyContent","color","fontSize","fontWeight","Moon","boxSize","onClick","cursor","marginTop","Sun","InputEl","type","name","value","onChange","placeholder","id","e","target","required","validateEmail","email","test","formFields","city","street","companyName","phone","website","validUrl","RegExp","phoneValidaton","numeber","length","LoginPage","useState","setEmail","message","setMessage","history","useHistory","borderColor","borderWidth","borderRadius","_hover","login","valid","storageEmail","localStorage","getItem","setItem","loginValidation","push","disabled","User","user","details","baseAPI","Axios","create","baseURL","UserObj","showUser","this","address","company","PostObj","showPost","title","body","AlbumObj","showAlbum","userService","get","then","response","data","users","map","catch","alert","singleUser","delete","status","post","patch","posts","albums","album","Loader","thickness","speed","emptyColor","size","authentication","Component","props","auth","setAuth","useEffect","setUsers","loader","setLoader","allUsers","a","getUsers","fetchUsers","maxW","variant","gridColumn","marginBottom","Card","borderBottom","borderTop","setUser","useParams","setPosts","setAlbums","getUser","getSingleUser","fetchSingleUser","getPosts","fetchPosts","getAlbums","fetchAlbums","deleteUser","marginRight","FormEl","setValues","submit","buttonTitle","marginBootom","createUser","validEmail","allFields","url","validPhone","postUser","editUser","App","exact","path","to","component","UsersPage","SingleUserPage","CreateNewUser","EditUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.292b7cd5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Text, Box } from \"@chakra-ui/layout\";\r\nimport { Menu } from \"@chakra-ui/menu\";\r\nimport { useColorMode } from \"@chakra-ui/color-mode\";\r\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\n\r\nconst Header = () => {\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode()\r\n\r\n  return (\r\n    <Menu>\r\n      <Box\r\n        bg=\"#00417A\"\r\n        p=\"20px\"\r\n        d=\"flex\"\r\n        justifyContent=\"space-around\"\r\n      >\r\n        <Text color=\"white\" fontSize=\"3xl\" fontWeight=\"700\"> USERS APP </Text>\r\n        {colorMode === \"light\" &&\r\n          <MoonIcon\r\n            boxSize={8}\r\n            color=\"white\"\r\n            onClick={toggleColorMode}\r\n            cursor=\"pointer\"\r\n            marginTop=\"6px\"\r\n          />\r\n        }\r\n        {colorMode === \"dark\" &&\r\n          <SunIcon\r\n            boxSize={8}\r\n            color=\"white\"\r\n            onClick={toggleColorMode}\r\n            cursor=\"pointer\"\r\n            marginTop=\"6px\"\r\n          />\r\n        }\r\n      </Box>\r\n    </Menu>\r\n  )\r\n};\r\n\r\nexport { Header };","import React from \"react\";\r\n\r\nimport { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\n\r\nconst InputEl = ({ type, name, value, onChange, placeholder }) => {\r\n    return (\r\n        <FormControl id={name} marginTop=\"17px\">\r\n            <Input\r\n                type={type}\r\n                name={name}\r\n                value={value}\r\n                onChange={(e) => onChange(e.target.value, name)}\r\n                placeholder={placeholder}\r\n                required\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport { InputEl };","\r\nexport const validateEmail = (email) => {\r\n  if (!email) return;\r\n  const valid = /\\S+@\\S+\\.\\S+/;\r\n  return valid.test(email);\r\n};\r\n\r\nexport const loginValidation = (email) => {\r\n  const valid = validateEmail(email);\r\n  if (!email || !valid) {\r\n    return \"Email is not valid!\";\r\n  }\r\n  const storageEmail = localStorage.getItem(\"email\");\r\n  if (storageEmail === email) {\r\n    return \"Welcome!\";\r\n  } else if (storageEmail && storageEmail !== email) {\r\n    return \"Try different email address!\";\r\n  } else {\r\n    localStorage.setItem(\"email\", email);\r\n    return \"Account created!\";\r\n  }\r\n};\r\n\r\nexport const formFields = (name, email, city, street, companyName, phone, website) => {\r\n  if (name && email && city && street && companyName && phone && website) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const validUrl = (website) => {\r\n  let valid = new RegExp('^(https?:\\\\/\\\\/)?' + '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' +\r\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' +\r\n    '(\\\\#[-a-z\\\\d_]*)?$', 'i');\r\n  return !!valid.test(website);\r\n}\r\n\r\nexport const phoneValidaton = (phone) => {\r\n  let valid = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?a-zA-Z]+/;\r\n  let numeber = phone ? phone.length : null;\r\n  if (!valid.test(phone) || numeber < 10) {\r\n    return false\r\n  } else {\r\n    return true\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Button, Container, Text, Center } from \"@chakra-ui/react\";\r\nimport { InputEl } from \"../../components/Input/Input\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginValidation } from '../../shared/utilities';\r\n\r\nconst LoginPage = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const emailSet = (value) => {\r\n        setEmail(value);\r\n        setMessage(\"\");\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const login = loginValidation(email);\r\n        setMessage(login)\r\n        if (login === \"Account created!\" || login === \"Welcome!\") {\r\n            history.push(\"/users\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            p=\"25px\"\r\n            borderColor=\"#00417A\"\r\n            borderWidth=\"2px\"\r\n            marginTop=\"50px\"\r\n            borderRadius=\"15px\"\r\n        >\r\n            <Center>\r\n                <Text fontSize=\"4xl\" marginTop=\"10px\" fontWeight=\"700\">LOGIN</Text>\r\n            </Center>\r\n            <Center>\r\n                <Text fontSize=\"1xl\" color=\"red\" marginTop=\"10px\">{message}</Text>\r\n            </Center>\r\n            <InputEl\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                onChange={emailSet}\r\n            />\r\n            <Center>\r\n                <Button\r\n                    bg=\"#00417A\"\r\n                    color=\"white\"\r\n                    _hover={{ bg: \"#00417A\" }}\r\n                    marginTop=\"15px\"\r\n                    onClick={handleSubmit}\r\n                    disabled={!email}\r\n                >\r\n                    Login\r\n                    </Button>\r\n            </Center>\r\n        </Container >\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import React from \"react\";\r\n\r\nimport { Td, Tr } from \"@chakra-ui/table\";\r\n\r\nconst User = ({ user, onClick, details }) => {\r\n    return (\r\n        <Tr\r\n            cursor=\"pointer\"\r\n            onClick={onClick}\r\n            _hover={{ bg: \"#00417A\", color: \"white\" }}\r\n        >\r\n            <Td fontWeight=\"600\">{user.id}</Td>\r\n            <Td fontWeight=\"600\">{user.name}</Td>\r\n            <Td fontWeight=\"600\">{user.email}</Td>\r\n            <Td fontWeight=\"600\">{user.city}</Td>\r\n            {details && <Td fontWeight=\"600\">{user.street}</Td>}\r\n            {details && <Td fontWeight=\"600\">{user.companyName}</Td>}\r\n            {details && <Td fontWeight=\"600\">{user.phone}</Td>}\r\n            {details && <Td fontWeight=\"600\">{user.website}</Td>}\r\n        </Tr>\r\n    );\r\n};\r\n\r\nexport { User }","import Axios from 'axios';\r\n\r\nconst SHOW_ENDPOINT = `https://jsonplaceholder.typicode.com/`;\r\n\r\nconst baseAPI = Axios.create({\r\n    baseURL: `${SHOW_ENDPOINT}/`\r\n})\r\n\r\nexport { baseAPI }","\r\nexport class UserObj {\r\n    constructor(showUser) {\r\n        this.id = showUser.id;\r\n        this.name = showUser.name;\r\n        this.email = showUser.email;\r\n        this.city = showUser.address.city;\r\n        this.street = showUser.address.street;\r\n        this.companyName = showUser.company.name;\r\n        this.phone = showUser.phone;\r\n        this.website = showUser.website;\r\n    }\r\n}\r\n","export class PostObj {\r\n    constructor(showPost) {\r\n        this.title = showPost.title\r\n        this.body = showPost.body\r\n    }\r\n}","export class AlbumObj {\r\n    constructor(showAlbum) {\r\n        this.title = showAlbum.title\r\n    }\r\n}","import { baseAPI } from '../shared/baseAPI';\r\nimport { UserObj } from '../entities/userObj';\r\nimport { PostObj } from '../entities/postObj';\r\nimport { AlbumObj } from '../entities/albumObj';\r\n\r\nclass UserService {\r\n    getUsers() {\r\n        return baseAPI.get(`users`)\r\n            .then(response => response.data)\r\n            .then(users => {\r\n                let newUsers = users.map(user => new UserObj(user))\r\n                return newUsers;\r\n            })\r\n            .catch(() => alert(\"Something went wrong\"))\r\n    }\r\n\r\n    getSingleUser(id) {\r\n        return baseAPI.get(`users/${id}`)\r\n            .then(response => response.data)\r\n            .then(singleUser => new UserObj(singleUser))\r\n            .catch(() => alert(\"Something went wrong\"))\r\n    }\r\n\r\n    deleteUser(id, user) {\r\n        return baseAPI.delete(`users/${id}`, user)\r\n            .then(response => response.status)\r\n            .catch(() => alert(\"Something went wrong\"))\r\n    }\r\n\r\n    postUser(user) {\r\n        return baseAPI.post(`users`, user)\r\n            .then(response => response.status)\r\n            .catch(() => alert(\"Something went wrong\"))\r\n    }\r\n\r\n    editUser(user, id) {\r\n        return baseAPI.patch(`users/${id}`, user)\r\n            .then(response => response.status)\r\n            .catch(() => alert(\"Something went wrong\"))\r\n    }\r\n\r\n    getPosts(id) {\r\n        return baseAPI.get(`users/${id}/posts`)\r\n            .then(response => response.data)\r\n            .then(posts => {\r\n                let newPosts = posts.map(post => new PostObj(post))\r\n                return newPosts;\r\n            })\r\n            .catch(() => alert(\"Something went wrong\"))\r\n    }\r\n    \r\n    getAlbums(id) {\r\n        return baseAPI.get(`users/${id}/albums`)\r\n            .then(response => response.data)\r\n            .then(albums => {\r\n                let newAlbums = albums.map(album => new AlbumObj(album))\r\n                return newAlbums;\r\n            })\r\n            .catch(() => alert(\"Something went wrong\"))\r\n    }\r\n}\r\n\r\nexport const userService = new UserService();","import React from 'react';\r\n\r\nimport { Spinner, Center } from \"@chakra-ui/react\"\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Center>\r\n            <Spinner\r\n                marginTop=\"60px\"\r\n                thickness=\"4px\"\r\n                speed=\"0.65s\"\r\n                emptyColor=\"gray.200\"\r\n                color=\"#00417A\"\r\n                size=\"xl\"\r\n            />\r\n        </Center>\r\n    )\r\n}\r\n\r\nexport { Loader }","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst authentication = (Component) => {\r\n    return (props) => {\r\n        const [auth, setAuth] = useState(false);\r\n        const history = useHistory();\r\n\r\n        useEffect(() => {\r\n            const email = localStorage.getItem(\"email\");\r\n            if (email) {\r\n                setAuth(true);\r\n            } else {\r\n                history.push(\"/login\");\r\n            }\r\n        }, [history]);\r\n\r\n        return <>{auth ? <Component {...props} /> : null}</>;\r\n    };\r\n};\r\n\r\nexport { authentication }","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router\";\r\nimport { User } from \"../../components/User/User\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { Container, Center } from \"@chakra-ui/layout\";\r\nimport { Table, Tbody, Th, Thead, Tr } from \"@chakra-ui/table\";\r\nimport { userService } from \"../../services/userService\";\r\nimport { Loader } from \"../../components/Spinner/Spinner\";\r\nimport { authentication } from \"../../hoc/authentication\";\r\n\r\nconst UsersPage = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const history = useHistory();\r\n    const [loader, setLoader] = useState(true);\r\n\r\n    const allUsers = async () => {\r\n        const fetchUsers = await userService.getUsers();\r\n        setUsers(fetchUsers);\r\n        setLoader(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        allUsers();\r\n    }, []);\r\n\r\n    return loader ? (\r\n        <Loader />\r\n    ) : (\r\n        <Container maxW=\"container.lg\">\r\n            <Table\r\n                variant=\"simple\"\r\n                marginTop=\"20px\"\r\n            >\r\n                <Thead>\r\n                    <Tr gridColumn=\"12\">\r\n                        <Th fontWeight=\"800\">ID</Th>\r\n                        <Th fontWeight=\"800\">Name</Th>\r\n                        <Th fontWeight=\"800\">Email</Th>\r\n                        <Th fontWeight=\"800\">City</Th>\r\n                    </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                    {users.map((user) => (\r\n                        <User user={user} key={user.id} onClick={() => history.push(`users/${user.id}`)} />\r\n                    ))}\r\n                </Tbody>\r\n            </Table>\r\n            <Center>\r\n                <Button\r\n                    bg=\"#00417A\"\r\n                    color=\"white\"\r\n                    _hover={{ bg: \"#00417A\" }}\r\n                    marginTop=\"20px\"\r\n                    marginBottom=\"20px\"\r\n                    onClick={() => history.push('/createuser')}\r\n                >Create new user\r\n                </Button>\r\n            </Center>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default authentication(UsersPage);","import React from \"react\";\r\n\r\nimport { Text, Box, Center } from '@chakra-ui/react';\r\n\r\nconst Card = ({ title, body }) => {\r\n    return (\r\n        <Box\r\n            borderBottom=\"1px\"\r\n            borderTop=\"1px\"\r\n            borderColor=\"#EDF2F7\"\r\n            marginBottom=\"20px\"\r\n            _hover={{ bg: \"#00417A\", color: \"white\" }}>\r\n            <Center>\r\n                <Text fontSize=\"2xl\">\r\n                    {title}\r\n                </Text>\r\n            </Center>\r\n            <Text>\r\n                {body}\r\n            </Text>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport { Card }","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { Container, Center } from \"@chakra-ui/layout\";\r\nimport { Table, Tbody, Th, Thead, Tr } from \"@chakra-ui/table\";\r\nimport { Text } from \"@chakra-ui/react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { User } from \"../../components/User/User\";\r\nimport { userService } from \"../../services/userService\";\r\nimport { Loader } from \"../../components/Spinner/Spinner\";\r\nimport { authentication } from \"../../hoc/authentication\";\r\nimport { Card } from '../../components/Card/Card';\r\nimport {\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n} from \"@chakra-ui/react\"\r\n\r\nconst SingleUserPage = () => {\r\n\r\n  const [user, setUser] = useState();\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  const [loader, setLoader] = useState(true);\r\n  const [posts, setPosts] = useState();\r\n  const [albums, setAlbums] = useState();\r\n\r\n  const getUser = async (id) => {\r\n    const fetchSingleUser = await userService.getSingleUser(id);\r\n    const fetchPosts = await userService.getPosts(id);\r\n    const fetchAlbums = await userService.getAlbums(id);\r\n    setUser(fetchSingleUser);\r\n    setPosts(fetchPosts);\r\n    setAlbums(fetchAlbums);\r\n    setLoader(false);\r\n  };\r\n\r\n  const deleteUser = async () => {\r\n    const status = await userService.deleteUser(id, user);\r\n    if (status === 200) {\r\n      alert(\"The user has been deleted!\")\r\n      history.push('/users')\r\n    } else {\r\n      alert(\"Currently unable to delete user\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUser(id);\r\n  }, [id]);\r\n\r\n  return loader ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container maxW=\"container.xl\">\r\n      <Table\r\n        variant=\"simple\"\r\n        marginTop=\"20px\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th fontWeight=\"800\">ID</Th>\r\n            <Th fontWeight=\"800\">Name</Th>\r\n            <Th fontWeight=\"800\">Email</Th>\r\n            <Th fontWeight=\"800\">City</Th>\r\n            <Th fontWeight=\"800\">Street</Th>\r\n            <Th fontWeight=\"800\">Company Name</Th>\r\n            <Th fontWeight=\"800\">Phone</Th>\r\n            <Th fontWeight=\"800\">Website</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          <User user={user} details />\r\n        </Tbody>\r\n      </Table>\r\n      <Center>\r\n        <Button\r\n          bg=\"#00417A\"\r\n          color=\"white\"\r\n          _hover={{ bg: \"#00417A\" }}\r\n          marginTop=\"20px\"\r\n          marginRight=\"10px\"\r\n          marginBottom=\"20px\"\r\n          onClick={() => history.push(`/users/${id}/edit`)}\r\n        >\r\n          Edit User\r\n        </Button>\r\n        <Button\r\n          bg=\"#00417A\"\r\n          color=\"white\"\r\n          _hover={{ bg: \"#00417A\" }}\r\n          marginTop=\"20px\"\r\n          marginBottom=\"20px\"\r\n          onClick={() => deleteUser(id)}\r\n        >\r\n          Delete User\r\n        </Button>\r\n      </Center>\r\n      <Center>\r\n        <Text color=\"#00417A\" fontSize=\"3xl\" fontWeight=\"700\" marginBottom=\"20px\" borderBottom=\"2px\" marginTop=\"20px\">\r\n          USER POSTS\r\n      </Text>\r\n      </Center>\r\n      {posts.map((post) => (\r\n        <Card title={post.title} body={post.body} />\r\n      ))}\r\n      <Center>\r\n        <Text color=\"#00417A\" fontSize=\"3xl\" fontWeight=\"700\" marginBottom=\"20px\" marginTop=\"20px\" borderBottom=\"2px\">\r\n          USER ALBUMS\r\n      </Text>\r\n      </Center>\r\n      {albums.map((album) => (\r\n        <Card title={album.title} />\r\n      ))}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default authentication(SingleUserPage);","import React from \"react\";\r\n\r\nimport { InputEl } from \"../Input/Input\";\r\nimport { Container, Center, Text, Button } from '@chakra-ui/react';\r\n\r\nconst FormEl = ({ title, message, name, email, city, street, companyName, phone, website, setValues,\r\n    submit, buttonTitle }) => {\r\n    return (\r\n        <Container\r\n            p=\"25px\"\r\n            borderColor=\"#00417A\"\r\n            borderWidth=\"2px\"\r\n            marginTop=\"50px\"\r\n            marginBootom=\"50px\"\r\n            borderRadius=\"15px\"\r\n        >\r\n            <Center>\r\n                <Text fontSize=\"4xl\" marginTop=\"10px\" fontWeight=\"700\">{title}</Text>\r\n            </Center>\r\n            <Center>\r\n                <Text fontSize=\"1xl\" marginTop=\"10px\" color=\"red\" fontWeight=\"600\">{message}</Text>\r\n            </Center>\r\n            <InputEl\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={setValues}\r\n            />\r\n            <InputEl\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={setValues}\r\n            />\r\n            <InputEl\r\n                type=\"text\"\r\n                name=\"city\"\r\n                placeholder=\"Enter city\"\r\n                value={city}\r\n                onChange={setValues}\r\n            />\r\n            <InputEl\r\n                type=\"text\"\r\n                name=\"street\"\r\n                placeholder=\"Enter street\"\r\n                value={street}\r\n                onChange={setValues}\r\n            />\r\n            <InputEl\r\n                type=\"text\"\r\n                name=\"companyName\"\r\n                placeholder=\"Enter companyName\"\r\n                value={companyName}\r\n                onChange={setValues}\r\n            />\r\n            <InputEl\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                placeholder=\"Enter phone\"\r\n                value={phone}\r\n                onChange={setValues}\r\n            />\r\n            <InputEl\r\n                type=\"text\"\r\n                name=\"website\"\r\n                placeholder=\"Enter website\"\r\n                value={website}\r\n                onChange={setValues}\r\n            />\r\n            <Center>\r\n                <Button\r\n                    bg=\"#00417A\"\r\n                    color=\"white\"\r\n                    _hover={{ bg: \"#00417A\" }}\r\n                    marginTop=\"15px\"\r\n                    onClick={() => submit()}\r\n                >\r\n                    {buttonTitle}\r\n                </Button>\r\n            </Center>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport { FormEl }","import React, { useState } from \"react\";\r\n\r\nimport { userService } from '../../services/userService';\r\nimport { useHistory } from \"react-router\";\r\nimport { validateEmail, formFields, validUrl, phoneValidaton, } from \"../../shared/utilities\";\r\nimport { FormEl } from \"../../components/Form/FormEl\";\r\nimport { authentication } from \"../../hoc/authentication\";\r\n\r\nconst CreateNewUser = () => {\r\n    const [user, setUser] = useState({});\r\n    const history = useHistory();\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const setValues = (data, name) => {\r\n        setUser({ ...user, [name]: data });\r\n        setMessage(\"\");\r\n    };\r\n\r\n    const createUser = async () => {\r\n        const validEmail = validateEmail(user.email)\r\n        const allFields = formFields(user.name, user.email, user.city, user.street, user.companyName, user.phone,\r\n            user.website)\r\n        const url = validUrl(user.website)\r\n        const validPhone = phoneValidaton(user.phone)\r\n\r\n        if (!allFields) {\r\n            setMessage(\"All fields are mandatory!\")\r\n            return;\r\n        }\r\n        if (!validEmail) {\r\n            setMessage(\"Email is not valid!\")\r\n            return;\r\n        }\r\n        if (!url) {\r\n            setMessage(\"Url is not valid\")\r\n            return;\r\n        }\r\n        if (!validPhone) {\r\n            setMessage(\"Phone is not valid! example: 1-770-736-8031 x56442\")\r\n            return;\r\n        }\r\n        const status = await userService.postUser(user);\r\n        if (status === 201) {\r\n            alert(\"The user has been successfully updated!\")\r\n            history.push('/users')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormEl\r\n            title=\"CREATE USER\"\r\n            message={message}\r\n            setValues={setValues}\r\n            submit={createUser}\r\n            buttonTitle=\"Create\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default authentication(CreateNewUser)","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { userService } from '../../services/userService';\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { validateEmail, formFields, validUrl, phoneValidaton } from \"../../shared/utilities\";\r\nimport { FormEl } from \"../../components/Form/FormEl\";\r\nimport { authentication } from \"../../hoc/authentication\";\r\n\r\nconst EditUser = () => {\r\n\r\n    const [user, setUser] = useState({});\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const getUser = async () => {\r\n        const fetchSingleUser = await userService.getSingleUser(id);\r\n        setUser(fetchSingleUser);\r\n    };\r\n\r\n    const setValues = (data, name) => {\r\n        setUser({ ...user, [name]: data });\r\n        setMessage(\"\");\r\n    };\r\n\r\n    const editUser = async () => {\r\n\r\n        const validEmail = validateEmail(user.email)\r\n        const allFields = formFields(user.name, user.email, user.city, user.street, user.companyName, user.phone,\r\n            user.website)\r\n        const url = validUrl(user.website)\r\n        const validPhone = phoneValidaton(user.phone)\r\n\r\n        if (!allFields) {\r\n            setMessage(\"All fields are mandatory!\")\r\n            return;\r\n        }\r\n        if (!validEmail) {\r\n            setMessage(\"Email is not valid!\")\r\n            return;\r\n        }\r\n        if (!url) {\r\n            setMessage(\"Url is not valid\")\r\n            return;\r\n        }\r\n        if (!validPhone) {\r\n            setMessage(\"Phone is not valid! example: 1-770-736-8031 x56442\")\r\n            return;\r\n        }\r\n        const status = await userService.editUser(user, id);\r\n        if (status === 200) {\r\n            alert(\"The user has been successfully updated!\")\r\n            history.push('/users')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!id) return;\r\n        getUser();\r\n    }, [id]);\r\n\r\n    return (\r\n        <FormEl\r\n            title=\"EDIT USER\"\r\n            message={message}\r\n            id={user.id}\r\n            name={user.name}\r\n            email={user.email}\r\n            city={user.city}\r\n            street={user.street}\r\n            companyName={user.companyName}\r\n            phone={user.phone}\r\n            website={user.website}\r\n            setValues={setValues}\r\n            submit={editUser}\r\n            buttonTitle=\"Save\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default authentication(EditUser);","import { ChakraProvider } from \"@chakra-ui/react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { Header } from \"./components/Header/Header\";\n\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport UsersPage from './pages/UsersPage/UsersPage';\nimport SingleUserPage from './pages/SingleUserPage/SingleUserPage';\nimport CreateNewUser from './pages/CreateNewUser/CreateNewUser';\nimport EditUser from './pages/EditUser/EditUser';\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/users\" />\n        </Route>\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/users\" component={UsersPage} />\n        <Route exact path=\"/users/:id\" component={SingleUserPage} />\n        <Route exact path=\"/createuser/\" component={CreateNewUser} />\n        <Route exact path=\"/users/:id/edit\" component={EditUser} />\n      </Switch>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}