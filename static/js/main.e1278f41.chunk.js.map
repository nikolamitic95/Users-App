{"version":3,"sources":["components/Header/Header.jsx","components/Input/Input.jsx","shared/utilities.js","pages/LoginPage/LoginPage.jsx","components/User/User.jsx","shared/baseAPI.js","entities/userObj.js","services/userService.js","components/Spinner/Spinner.jsx","hoc/authentication.js","pages/UsersPage/UsersPage.jsx","pages/SingleUserPage/SingleUserPage.jsx","components/Form/FormEl.jsx","pages/CreateNewUser/CreateNewUser.jsx","pages/EditUser/EditUser.jsx","App.js","index.js"],"names":["Header","useColorMode","colorMode","toggleColorMode","bg","p","d","justifyContent","color","fontSize","fontWeight","Moon","boxSize","onClick","cursor","marginTop","Sun","InputEl","type","name","value","onChange","placeholder","id","e","target","required","validateEmail","email","test","LoginPage","useState","setEmail","message","setMessage","history","useHistory","borderColor","borderWidth","borderRadius","_hover","login","valid","storageEmail","localStorage","getItem","setItem","loginValidation","push","disabled","User","user","details","city","street","companyName","phone","website","baseAPI","Axios","create","baseURL","UserObj","showUser","this","address","company","userService","get","then","response","data","users","map","catch","alert","singleUser","delete","status","post","patch","Loader","thickness","speed","emptyColor","size","authentication","Component","props","auth","setAuth","useEffect","setUsers","loader","setLoader","allUsers","a","getUsers","fetchUsers","maxW","variant","gridColumn","marginBottom","setUser","useParams","getUser","getSingleUser","fetchSingleUser","deleteUser","marginRight","FormEl","title","setValues","submit","buttonTitle","createUser","postUser","editUser","App","exact","path","to","component","UsersPage","SingleUserPage","CreateNewUser","EditUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1278f41.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Text, Box } from \"@chakra-ui/layout\";\r\nimport { Menu } from \"@chakra-ui/menu\";\r\nimport { useColorMode } from \"@chakra-ui/color-mode\";\r\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\n\r\nconst Header = () => {\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode()\r\n\r\n  return (\r\n    <Menu>\r\n      <Box\r\n        bg=\"#00417A\"\r\n        p=\"20px\"\r\n        d=\"flex\"\r\n        justifyContent=\"space-around\"\r\n      >\r\n        <Text color=\"white\" fontSize=\"3xl\" fontWeight=\"700\"> USERS APP </Text>\r\n        {colorMode === \"light\" &&\r\n          <MoonIcon\r\n            boxSize={8}\r\n            color=\"white\"\r\n            onClick={toggleColorMode}\r\n            cursor=\"pointer\"\r\n            marginTop=\"6px\"\r\n          />\r\n        }\r\n        {colorMode === \"dark\" &&\r\n          <SunIcon\r\n            boxSize={8}\r\n            color=\"white\"\r\n            onClick={toggleColorMode}\r\n            cursor=\"pointer\"\r\n            marginTop=\"6px\"\r\n          />\r\n        }\r\n      </Box>\r\n    </Menu>\r\n  )\r\n};\r\n\r\nexport { Header };","import React from \"react\";\r\n\r\nimport { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\n\r\nconst InputEl = ({ type, name, value, onChange, placeholder }) => {\r\n    return (\r\n        <FormControl id={name} marginTop=\"17px\">\r\n            <Input\r\n                type={type}\r\n                name={name}\r\n                value={value}\r\n                onChange={(e) => onChange(e.target.value, name)}\r\n                placeholder={placeholder}\r\n                required\r\n            />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport { InputEl };","\r\nexport const validateEmail = (email) => {\r\n  if (!email) return;\r\n  const valid = /\\S+@\\S+\\.\\S+/;\r\n  return valid.test(email);\r\n};\r\n\r\nexport const loginValidation = (email) => {\r\n  const valid = validateEmail(email);\r\n  if (!email || !valid) {\r\n    return \"Email is not valid!\";\r\n  }\r\n  const storageEmail = localStorage.getItem(\"email\");\r\n  if (storageEmail === email) {\r\n    return \"Welcome!\";\r\n  } else if (storageEmail && storageEmail !== email) {\r\n    return \"Try different email address!\";\r\n  } else {\r\n    localStorage.setItem(\"email\", email);\r\n    return \"Account created!\";\r\n  }\r\n};\r\n\r\n\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Button, Container, Text, Center } from \"@chakra-ui/react\";\r\nimport { InputEl } from \"../../components/Input/Input\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginValidation } from '../../shared/utilities';\r\n\r\nconst LoginPage = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const emailSet = (value) => {\r\n        setEmail(value);\r\n        setMessage(\"\");\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const login = loginValidation(email);\r\n        setMessage(login)\r\n        if (login === \"Account created!\" || login === \"Welcome!\") {\r\n            history.push(\"/users\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            p=\"25px\"\r\n            borderColor=\"#00417A\"\r\n            borderWidth=\"2px\"\r\n            marginTop=\"50px\"\r\n            borderRadius=\"15px\"\r\n        >\r\n            <Center>\r\n                <Text fontSize=\"4xl\" marginTop=\"10px\" fontWeight=\"700\">LOGIN</Text>\r\n            </Center>\r\n            <Center>\r\n                <Text fontSize=\"1xl\" color=\"red\" marginTop=\"10px\">{message}</Text>\r\n            </Center>\r\n            <InputEl\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                onChange={emailSet}\r\n            />\r\n            <Center>\r\n                <Button\r\n                    bg=\"#00417A\"\r\n                    color=\"white\"\r\n                    _hover={{ bg: \"#00417A\" }}\r\n                    marginTop=\"15px\"\r\n                    onClick={handleSubmit}\r\n                    disabled={!email}\r\n                >\r\n                    Login\r\n                    </Button>\r\n            </Center>\r\n        </Container >\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import React from \"react\";\r\n\r\nimport { Td, Tr } from \"@chakra-ui/table\";\r\n\r\nconst User = ({ user, onClick, details }) => {\r\n    return (\r\n        <Tr\r\n            cursor=\"pointer\"\r\n            onClick={onClick}\r\n            _hover={{ bg: \"#00417A\", color: \"white\" }}\r\n        >\r\n            <Td fontWeight=\"600\">{user.id}</Td>\r\n            <Td fontWeight=\"600\">{user.name}</Td>\r\n            <Td fontWeight=\"600\">{user.email}</Td>\r\n            <Td fontWeight=\"600\">{user.city}</Td>\r\n            {details && <Td fontWeight=\"600\">{user.street}</Td>}\r\n            {details && <Td fontWeight=\"600\">{user.companyName}</Td>}\r\n            {details && <Td fontWeight=\"600\">{user.phone}</Td>}\r\n            {details && <Td fontWeight=\"600\">{user.website}</Td>}\r\n        </Tr>\r\n    );\r\n};\r\n\r\nexport { User }","import Axios from 'axios';\r\n\r\nconst SHOW_ENDPOINT = `https://jsonplaceholder.typicode.com/`;\r\n\r\nconst baseAPI = Axios.create({\r\n    baseURL: `${SHOW_ENDPOINT}/`\r\n})\r\n\r\nexport { baseAPI }","  \r\nexport class UserObj{\r\n    constructor(showUser){\r\n        this.id = showUser.id;\r\n        this.name = showUser.name;\r\n        this.email = showUser.email;\r\n        this.city = showUser.address.city;\r\n        this.street = showUser.address.street;\r\n        this.companyName = showUser.company.name;\r\n        this.phone = showUser.phone;\r\n        this.website = showUser.website;\r\n    }\r\n}\r\n","import { baseAPI } from '../shared/baseAPI';\r\nimport { UserObj } from '../entities/userObj';\r\n\r\nclass UserService {\r\n    getUsers() {\r\n        return baseAPI.get(`users`)\r\n            .then(response => response.data)\r\n            .then(users => {\r\n                let newUsers = users.map(user => new UserObj(user))\r\n                return newUsers;\r\n            })\r\n            .catch(() => alert(\"Something went wrong\"))\r\n    }\r\n\r\n    getSingleUser(id) {\r\n        return baseAPI.get(`users/${id}`)\r\n            .then(response => response.data)\r\n            .then(singleUser => new UserObj(singleUser))\r\n            .catch(() =>  alert(\"Something went wrong\"))\r\n    }\r\n\r\n    deleteUser(id, user) {\r\n        return baseAPI.delete(`users/${id}`, user)\r\n            .then(response => response.status)\r\n            .catch(() =>  alert(\"Something went wrong\"))\r\n    }\r\n\r\n    postUser(user) {\r\n        return baseAPI.post(`users`, user)\r\n            .then(response => response.status)\r\n            .catch(() => alert(\"Something went wrong\"))\r\n    }\r\n    \r\n    editUser(user, id) {\r\n        return baseAPI.patch(`users/${id}`, user)\r\n            .then(response => response.status)\r\n            .catch(() =>  alert(\"Something went wrong\"))\r\n    }\r\n}\r\n\r\nexport const userService = new UserService();","import React from 'react';\r\n\r\nimport { Spinner, Center } from \"@chakra-ui/react\"\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Center>\r\n            <Spinner\r\n                marginTop=\"60px\"\r\n                thickness=\"4px\"\r\n                speed=\"0.65s\"\r\n                emptyColor=\"gray.200\"\r\n                color=\"#00417A\"\r\n                size=\"xl\"\r\n            />\r\n        </Center>\r\n    )\r\n}\r\n\r\nexport { Loader }","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst authentication = (Component) => {\r\n    return (props) => {\r\n        const [auth, setAuth] = useState(false);\r\n        const history = useHistory();\r\n\r\n        useEffect(() => {\r\n            const email = localStorage.getItem(\"email\");\r\n            if (email) {\r\n                setAuth(true);\r\n            } else {\r\n                history.push(\"/login\");\r\n            }\r\n        }, [history]);\r\n\r\n        return <>{auth ? <Component {...props} /> : null}</>;\r\n    };\r\n};\r\n\r\nexport { authentication }","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router\";\r\nimport { User } from \"../../components/User/User\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { Container, Center } from \"@chakra-ui/layout\";\r\nimport { Table, Tbody, Th, Thead, Tr } from \"@chakra-ui/table\";\r\nimport { userService } from \"../../services/userService\";\r\nimport { Loader } from \"../../components/Spinner/Spinner\";\r\nimport { authentication } from \"../../hoc/authentication\";\r\n\r\nconst UsersPage = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const history = useHistory();\r\n    const [loader, setLoader] = useState(true);\r\n\r\n    const allUsers = async () => {\r\n        const fetchUsers = await userService.getUsers();\r\n        setUsers(fetchUsers);\r\n        setLoader(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        allUsers();\r\n    }, []);\r\n\r\n    return loader ? (\r\n        <Loader />\r\n    ) : (\r\n        <Container maxW=\"container.lg\">\r\n            <Table\r\n                variant=\"simple\"\r\n                marginTop=\"20px\"\r\n            >\r\n                <Thead>\r\n                    <Tr gridColumn=\"12\">\r\n                        <Th fontWeight=\"800\">ID</Th>\r\n                        <Th fontWeight=\"800\">Name</Th>\r\n                        <Th fontWeight=\"800\">Email</Th>\r\n                        <Th fontWeight=\"800\">City</Th>\r\n                    </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                    {users.map((user) => (\r\n                        <User user={user} key={user.id} onClick={() => history.push(`users/${user.id}`)} />\r\n                    ))}\r\n                </Tbody>\r\n            </Table>\r\n            <Center>\r\n                <Button\r\n                    bg=\"#00417A\"\r\n                    color=\"white\"\r\n                    _hover={{ bg: \"#00417A\" }}\r\n                    marginTop=\"20px\"\r\n                    marginBottom=\"20px\"\r\n                    onClick={() => history.push('/createuser')}\r\n                >Create new user\r\n                </Button>\r\n            </Center>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default authentication(UsersPage);","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { Container, Center } from \"@chakra-ui/layout\";\r\nimport { Table, Tbody, Th, Thead, Tr } from \"@chakra-ui/table\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { User } from \"../../components/User/User\";\r\nimport { userService } from \"../../services/userService\";\r\nimport { Loader } from \"../../components/Spinner/Spinner\";\r\nimport { authentication } from \"../../hoc/authentication\";\r\n\r\nconst SingleUserPage = () => {\r\n\r\n  const [user, setUser] = useState();\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  const getUser = async (id) => {\r\n    const fetchSingleUser = await userService.getSingleUser(id);\r\n    setUser(fetchSingleUser);\r\n    setLoader(false);\r\n  };\r\n\r\n  const deleteUser = async () => {\r\n    const status = await userService.deleteUser(id, user);\r\n    if (status === 200) {\r\n      alert(\"The user has been deleted!\")\r\n      history.push('/users')\r\n    } else {\r\n      alert(\"Currently unable to delete user\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUser(id);\r\n  }, [id]);\r\n\r\n  return loader ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container maxW=\"container.xl\">\r\n      <Table\r\n        variant=\"simple\"\r\n        marginTop=\"20px\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th fontWeight=\"800\">ID</Th>\r\n            <Th fontWeight=\"800\">Name</Th>\r\n            <Th fontWeight=\"800\">Email</Th>\r\n            <Th fontWeight=\"800\">City</Th>\r\n            <Th fontWeight=\"800\">Street</Th>\r\n            <Th fontWeight=\"800\">Company Name</Th>\r\n            <Th fontWeight=\"800\">Phone</Th>\r\n            <Th fontWeight=\"800\">Website</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          <User user={user} details />\r\n        </Tbody>\r\n      </Table>\r\n      <Center>\r\n        <Button\r\n          bg=\"#00417A\"\r\n          color=\"white\"\r\n          _hover={{ bg: \"#00417A\" }}\r\n          marginTop=\"20px\"\r\n          marginRight=\"10px\"\r\n          marginBottom=\"20px\"\r\n          onClick={() => history.push(`/users/${id}/edit`)}\r\n        >\r\n          Edit User\r\n        </Button>\r\n        <Button\r\n          bg=\"#00417A\"\r\n          color=\"white\"\r\n          _hover={{ bg: \"#00417A\" }}\r\n          marginTop=\"20px\"\r\n          marginBottom=\"20px\"\r\n          onClick={() => deleteUser(id)}\r\n        >\r\n          Delete User\r\n        </Button>\r\n      </Center>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default authentication(SingleUserPage);","import React from \"react\";\r\n\r\nimport { InputEl } from \"../Input/Input\";\r\nimport { Container, Center, Text, Button } from '@chakra-ui/react';\r\n\r\nconst FormEl = ({ title, message, name, email, setValues, submit, buttonTitle }) => {\r\n    return (\r\n        <Container\r\n            p=\"25px\"\r\n            borderColor=\"#00417A\"\r\n            borderWidth=\"2px\"\r\n            marginTop=\"50px\"\r\n            borderRadius=\"15px\"\r\n        >\r\n            <Center>\r\n                <Text fontSize=\"4xl\" marginTop=\"10px\" fontWeight=\"700\">{title}</Text>\r\n            </Center>\r\n            <Center>\r\n                <Text fontSize=\"1xl\" marginTop=\"10px\" color=\"red\" fontWeight=\"600\">{message}</Text>\r\n            </Center>\r\n            <InputEl\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={setValues}\r\n            />\r\n            <InputEl\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={setValues}\r\n            />\r\n            <Center>\r\n                <Button\r\n                    bg=\"#00417A\"\r\n                    color=\"white\"\r\n                    _hover={{ bg: \"#00417A\" }}\r\n                    marginTop=\"15px\"\r\n                    onClick={() => submit()}\r\n                >\r\n                    {buttonTitle}\r\n                </Button>\r\n            </Center>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport { FormEl }","import React, { useState } from \"react\";\r\n\r\nimport { userService } from '../../services/userService';\r\nimport { useHistory } from \"react-router\";\r\nimport { validateEmail } from '../../shared/utilities';\r\nimport { FormEl } from \"../../components/Form/FormEl\";\r\nimport { authentication } from \"../../hoc/authentication\";\r\n\r\nconst CreateNewUser = () => {\r\n    const [user, setUser] = useState({});\r\n    const history = useHistory();\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const setValues = (data, name) => {\r\n        setUser({ ...user, [name]: data });\r\n        setMessage(\"\");\r\n    };\r\n\r\n    const createUser = async () => {\r\n        const status = await userService.postUser(user);\r\n        const validEmail = validateEmail(user.email)\r\n        if (!validEmail || !user.name) {\r\n            setMessage(\"Please enter a valid name and email!\")\r\n        } else if (status === 201) {\r\n            alert(\"The user has been successfully created!\")\r\n            history.push('/users')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormEl\r\n            title=\"CREATE USER\"\r\n            message={message}\r\n            setValues={setValues}\r\n            submit={createUser}\r\n            buttonTitle=\"Create\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default authentication(CreateNewUser)","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { userService } from '../../services/userService';\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { validateEmail } from \"../../shared/utilities\";\r\nimport { FormEl } from \"../../components/Form/FormEl\";\r\nimport { authentication } from \"../../hoc/authentication\";\r\n\r\nconst EditUser = () => {\r\n\r\n    const [user, setUser] = useState({});\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const getUser = async () => {\r\n        const fetchSingleUser = await userService.getSingleUser(id);\r\n        setUser(fetchSingleUser);\r\n    };\r\n\r\n    const setValues = (data, name) => {\r\n        setUser({ ...user, [name]: data });\r\n        setMessage(\"\");\r\n    };\r\n\r\n    const editUser = async () => {\r\n        const status = await userService.editUser(user, id);\r\n        const validEmail = validateEmail(user.email)\r\n        if (!validEmail || !user.name) {\r\n            setMessage(\"Please enter a valid name and email!\")\r\n        } else if (status === 200) {\r\n            alert(\"The user has been successfully updated!\")\r\n            history.push('/users')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!id) return;\r\n        getUser();\r\n    }, [id]);\r\n\r\n    return (\r\n        <FormEl\r\n            title=\"EDIT USER\"\r\n            message={message}\r\n            name={user.name}\r\n            email={user.email}\r\n            setValues={setValues}\r\n            submit={editUser}\r\n            buttonTitle=\"Save\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default authentication(EditUser);","import { ChakraProvider } from \"@chakra-ui/react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { Header } from \"./components/Header/Header\";\n\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport UsersPage from './pages/UsersPage/UsersPage';\nimport SingleUserPage from './pages/SingleUserPage/SingleUserPage';\nimport CreateNewUser from './pages/CreateNewUser/CreateNewUser';\nimport EditUser from './pages/EditUser/EditUser';\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/users\" />\n        </Route>\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/users\" component={UsersPage} />\n        <Route exact path=\"/users/:id\" component={SingleUserPage} />\n        <Route exact path=\"/createuser/\" component={CreateNewUser} />\n        <Route exact path=\"/users/:id/edit\" component={EditUser} />\n      </Switch>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}